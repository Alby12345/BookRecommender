@model BookRecommender.Models.HomeViewModels.SearchViewModel

@{
    ViewData["Title"] = "Search";
}

<div class="container-fluid">
    <div class="col-sm-12">
    <h3>Search:</h3>
    <form action="/Home/Search" method="GET" class="form-inline">
        <input type="text" name="query" class="form-control" value="@Model?.SearchPhrase" id="searchBar" list="options"/ autocomplete="off">
        <button type="submit" value="Submit" class="btn btn-default"><span class="glyphicon glyphicon-search"></span> Search</button>
        <datalist id="options"/>
    </form>
    </div>
</div>

@if (Model != null){

<div class="container-fluid">
        <div class="col-sm-12">

    <h5> @Model.TotalBooksFound books found</h5>
    <h5> @Model.TotalAuthorsFound authors found</h5>
        </div>
</div>

<div class="container-fluid">
    <div class="col-sm-6">
        <h3> Books: </h3>
        <table class="table table-striped">
            <tbody>
                @foreach (var bookSearchView in Model.GetBooksToShow()){
                <tr>
                    <td>
                        <div class="row match-my-cols">
                            <div class="col-sm-10 col-xs-12">
                                <div class="container-fluid">
                                    <div class="row">
                                        <a href="/Book/Detail/@bookSearchView.Book.BookId">@bookSearchView.Book.NameEn </a>
                                    </div>
                                    <div class="row">
                                        @{
                                        var genres = string.Join(", ", bookSearchView.BookGenres.Select(g => g.NameEn).ToArray());
                                        genres = string.IsNullOrEmpty(genres)?"---": genres;
                                        var authors = string.Join(", ", bookSearchView.BookAuthors.Select(a => a.NameEn).ToArray());
                                        authors = string.IsNullOrEmpty(authors)?"---": authors;
                                        }
                                        <div class="col-sm-4"><p class="text-center">@genres</p></div>
                                        <div class="col-sm-4"><p class="text-center">@authors</p></div>

                                        @{
                                        string score;
                                        if(!bookSearchView.BookRating.HasValue){
                                            score = "---";
                                            <div class="col-sm-4"><p class="text-center">@score</p></div>
                                        } else{
                                            var lStars = bookSearchView.BookRating.Value;
                                            score = new String('★', lStars) + new String('☆', 5 - lStars);
                                            <div class="col-sm-4"><p class="text-center"><span class="stars">@score</span></p></div>
                                        }}
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-2 hidden-xs" style="padding:0">
                                <div class="img-dynamic">
                                    <img class="img-thumbnail center-block dynamic" style="max-width: 50px;" src="/images/loading.svg" data-uri="@bookSearchView.Book.Uri"
                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
                }
        </table>
    </div>



    <div class="col-sm-6">

        <h3> Authors: </h3>

        <table class="table table-striped">
            <tbody>
                @foreach (var author in Model.GetAuthorsToShow()){
                <tr>
                    <td><a href="/Author/Detail/@author.AuthorId"> @author.NameEn </a></td>
                </tr>
                }
        </table>
    </div>
</div>



@if(Model.HighestPage > 1){
<ul class="pager">
    @if(Model.ShowPrevious()){
    <li class="previous"><a href="Search?query=@Model.SearchPhrase&page=@(Model.Page - 1)">Previous</a></li>
    }

    <li>Page @Model.Page/@Model.HighestPage </li>
    @if(Model.ShowNext()){
    <li class="next"><a href="Search?query=@Model.SearchPhrase&page=@(Model.Page + 1)">Next</a></li>
    }
</ul>
}
}