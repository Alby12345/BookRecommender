@using System.Linq
@model List<BookRecommender.Models.Recommendation>

@{
    // is generater only for use in img ajax rendering, if no random element added, all images would load again
    var currentToken = new Random().Next();
}

@if(Model.Count == 0){
    <div class="container-fluid">
        <h3 class="text-center">No recommendations yet available.</h3>
    </div>
}else{
    <script>
        $('img.dynamic-rec').each(function() {
            var token = $(this).data('token');
            if(token != '@currentToken'){
                return;
            }
            var item = this;
            $.ajax({
                type: "GET",
                url: "/Ajax/DynamicImage?entityUri=" + $(this).data('uri'),
                datatype: "html",
                success: function(data) {
                    $(item).attr('src', data);
                },
                error: function() {
                    $(item).attr('src', "images/imgna.png");
                }
            });
        });
    </script>

    <div class="container-fluid" style="padding-left:0; padding-right:0; margin: -5px; padding-top: 5px;">
        @foreach(var recommendation in Model){
        <div class="col-md-4 col-sm-6 col-xs-12" style="padding-left:0; padding-right:0;">
            <div class="container-fluid rec-container" style="height: 200px">
                <a href="/Book/Detail/@recommendation.Book.BookId">
                    <h3 style="margin:5px">@recommendation.Book.GetNameEnShort(40)</h3>
                </a>

                <div class="col-xs-4 text-center" style="padding:0">
                    <img class="img-responsive center-block dynamic-rec increased-padding" style="max-height: 120px;" src="/images/loading.svg" data-uri="@recommendation.Book.Uri" data-token="@currentToken">
                </div>

                <div class="col-xs-8" style="padding">
                    @if(recommendation.Authors.Count() > 0){
                        @if(recommendation.Authors.Count() > 1){
                    <p style="margin:5px 0"> <strong>Authors: </strong></p>
                        } else {
                    <p style="margin:5px 0"> <strong>Author: </strong></p>
                        }
                    @foreach (var author in recommendation.Authors.Take(3)){
                    <p style="margin:0px 0"><a href="/Author/Detail/@author.AuthorId"> @author.GetNameEn() </a></p>
                    } }
                    @if(recommendation.Authors.Count() > 3){
                        <p style="margin:0px 0">...</p>
                    }
                    @if (recommendation.Genres.Count() > 0){
                        @if(recommendation.Genres.Count() > 1){
                            @if(recommendation.Genres.Count() > 3){
                                <p> <strong>Genres:</strong> @(string.Join(", ", recommendation.Genres.Take(3).Select(g => g.NameEn).ToArray()) + ", ...")</p>
                            }else{
                            <p> <strong>Genres:</strong> @string.Join(", ", recommendation.Genres.Select(g => g.NameEn).ToArray())</p>
                            }
                        } else {
                        <p> <strong>Genre:</strong> @recommendation.Genres.First().NameEn</p>
                        }
                    }
                    @if(recommendation.RecommendationReason != null){
                    <p>@recommendation.RecommendationReason</p>
                    }
                </div>
            </div>
        </div>
        }
    </div>
}