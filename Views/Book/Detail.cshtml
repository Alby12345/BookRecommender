@model BookRecommender.Models.BookDetail

<div class="container-fluid">
    <div class="col-sm-9">
        <div class="row">
            <h2>@Model.Book.GetNameEn()</h2>
        </div>
        @if(!string.IsNullOrEmpty(Model.Book.Description)){
            <p>@Model.Book.Description</p>
        }
        @if(Model.Authors.Count() > 0){
            @if(Model.Authors.Count() > 1){
        <p> <strong>Authors: </strong></p>
            } else {
        <p> <strong>Author: </strong></p>
            }
        @foreach (var author in Model.Authors){
        <p><a href="/Author/Detail/@author.AuthorId"> @author.GetNameEn() </a></p>
        } }
        @if (Model.Genres.Count() > 0){
            @if(Model.Genres.Count() > 1){
        <p> <strong>Genres:</strong> @string.Join(", ", Model.Genres.Select(g => g.NameEn).ToArray())</p>
            } else {
        <p> <strong>Genre:</strong> @Model.Genres.First().NameEn</p>
            }
        }
        @if (Model.Characters.Count() > 0){
        <p> <strong>Characters:</strong> @string.Join(", ", Model.Characters.Select(c => c.NameEn).ToArray())</p>
        }
        @if (Model.Tags.Count() > 0){
            var tagsSortByScoreDesc = Model.Tags.OrderByDescending(t => t.Score);
        <p> <strong>Tags:</strong> @string.Join(", ", Model.Tags.Select(t => t.Value).ToArray())</p>
        }
    </div>
    <div class="col-sm-3">
        <div class="text-center">
            @if(Model.BookRating.HasValue){
            <h3>@Model.BookRating%</h3>
            } else {
                <h3>No rating availible</h3>
            }
        </div>
        <div class="text-center modal-img" data-toggle="modal" data-target="#myModal">
            <img class="img-responsive center-block dynamic increased-padding" data-uri="@Model.Book.Uri">
        </div>
        @if(Model.SignedIn){
            <div class="text-center">
            @if(Model.UserBookRating == null){
                <div id="rateButton">
                    <button class="btn btn-default">Rate this book</button>
                </div>
            } else {
                var lStars = Model.UserBookRating.Rating;
                var rating = new String('★', lStars) + new String('☆', 5 - lStars);
                <h4>My rating: @rating</h4>
            }
            </div>
        }
    </div>
</div>

<div class="container-fluid" id="rateForm" style="display: none;">
    <form action="/Book/AddRating" method="POST" class="form-inline">
        <div class="col-sm-2">
            <select name="scoreRating" class="form-control" style="min-width: 100%">
                <option value="1">1 - Awful</option>
                <option value="2">2 - Poor</option>
                <option value="3">3 - Ok</option>
                <option value="4">4 - Good</option>
                <option value="5">5 - Excelent</option>
            </select>
        </div>
        <div class="col-sm-8">
            <input type="textarea" name="textRating" class="form-control" style="min-width: 100%"/>
            <input type="hidden" name="bookId" value="@Model.Book.BookId" />
        </div>
        <div class="col-sm-2">
            <button type="submit" value="Submit" class="btn btn-default" style="min-width: 100%">Add rating</button>
        </div>
    </form>
</div>

<div class="container-fluid" style="margin-top: 10px">
    <ul class="nav nav-tabs nav-justified" style="margin-bottom: 10px;">
    <li class="active"><a data-toggle="tab" href="#recommendations">Recommendations</a></li>
    <li><a data-toggle="tab" href="#reviews">Reviews</a></li>
    <li><a data-toggle="tab" href="#additionalData">Dynamic data</a></li>
    </ul>

    <div class="tab-content">

        <div id="recommendations" class="tab-pane fade in active">
                    <h3 class="text-center"> Not implemented yet - there is going to be a list of recommended books </h3>
        </div>

        <div id="reviews" class="tab-pane fade">
            <ul class="list-group">
                @foreach(var rating in Model.Ratings){
                    <li class="list-group-item">
                    @{
                        var lStars = rating.Rating;
                        var ratingstars = new String('★', lStars) + new String('☆', 5 - lStars);
                    }
                    <div class="container-fluid">
                        <div class="col-sm-2 text-left">
                            @ratingstars
                        </div>
                        <div class="col-sm-8 text-center">
                            @rating.TextRating
                        </div>
                        <div class="col-sm-2 text-right">
                            @rating.CreatedTime.ToString("dd. MM. yyyy")
                        </div>

                    </div>
                    </li>
                }
            </ul>
        </div>

        <div id="additionalData" class="tab-pane fade" data-uri="@Model.Book.Uri">
        </div>
    </div>
</div>

<div id="myModal" class="modal fade" role="dialog"  tabindex='-1'>
    <span class="close" data-dismiss="modal">&times;</span>
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <div>
                    <img class="img-responsive dynamic center-block" data-uri="@Model.Book.Uri">
                </div>
            </div>
        </div>
    </div>
</div>

<script>
$(function(){
    $('#rateButton button').click(function()
        {
            $('#rateButton').hide();
            $('#rateForm').fadeIn("slow");
        }
    );
});

$(function(){
    $(window).on('load', function() {
        $.ajax({
            type: "GET",
            url: "/Ajax/SparqlData?entityUri=" + $('#additionalData').data('uri'),
            datatype: "html",
            success: function (data) {
                $('#additionalData').html(data);
                <!--$('#additionalData').slideDown("slow");-->
            }
        })
    });
});


$('img.dynamic').each(function(){
    var item = this;
    $.ajax({
            type: "GET",
            url: "/Ajax/DynamicImage?entityUri=" + $(this).data('uri'),
            datatype: "html",
            success: function (data) {
                $(item).attr('src', data);
            }
        })
});
</script>