@model BookRecommender.Models.BookDetail

<div class="container-fluid">
    <div class="col-sm-8">
        <div class="row">
            <h2>@Model.Book.GetNameEn()</h2>
        </div>
        @if(!string.IsNullOrEmpty(Model.Book.Description)){
            <p>@Model.Book.Description</p>
        }
        @if(Model.Authors.Count() > 0){
        <p> <strong>Authors: </strong></p>
        @foreach (var author in Model.Authors){
        <p><a href="/Author/Detail/@author.AuthorId"> @author.GetNameEn() </a></p>
        } }
        @if (Model.Genres.Count() > 0){
        <p> <strong>Genres:</strong> @string.Join(", ", Model.Genres.Select(g => g.NameEn).ToArray())</p>
        }
        @if (Model.Characters.Count() > 0){
        <p> <strong>Characters:</strong> @string.Join(", ", Model.Characters.Select(c => c.NameEn).ToArray())</p>
        }
    </div>
    <div class="col-sm-4">
        <div class="row">
            <h3>Score</h3>
        </div>
        <div class="row">
            <img class="img-responsive" src="@Model.Book.TryToGetImgUrl()">
        </div>
    </div>
</div>



<!--<hr>

<p><strong>Czech name:</strong> @Model.Book.NameCs</p>
<p><strong>Uri:</strong><a href="@Model.Book.Uri">@Model.Book.Uri</a></p>-->

<hr>

@{ await Html.RenderPartialAsync("AdditionalSparqlData", @Model.AdditionalData); }